#
import re
import config
import datetime
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from request_db import requestDB
from homework_opers import Homework
from check_InputData import *
import config_pars
#
vk_session = vk_api.VkApi(token=config.token)
session_api = vk_session.get_api()
longpoll = VkLongPoll(vk_session)
Homework = Homework()
users = None
#


def showWeekdays(event):
    db = requestDB('Data Base/db.db')
    Homework_flag = db.getUserHomewFlag(event.user_id)
    Schedule_flag = db.getUserSchedFlag(event.user_id)
    addHomework_flag = db.getUserAddHomewFlag(event.user_id)
    db.close()
    #
    if Homework_flag or addHomework_flag == True:
        msg = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É...'
    else:
        msg = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏...'
    #
    keyboard = VkKeyboard(one_time=False)
    if Homework_flag == True:
        keyboard.add_button('–£–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
    if Schedule_flag == True or Homework_flag == True:
        keyboard.add_button('–ù–∞ —Å–µ–≥–æ–¥–Ω—è', color=VkKeyboardColor.POSITIVE)
        keyboard.add_button('–ù–∞ –∑–∞–≤—Ç—Ä–∞', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
    elif addHomework_flag == True:
        keyboard.add_button('–£–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ', color=VkKeyboardColor.POSITIVE)
        keyboard.add_button('–ù–∞ –∑–∞–≤—Ç—Ä–∞', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
    #
    keyboard.add_button('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', color=VkKeyboardColor.SECONDARY)
    keyboard.add_button('–í—Ç–æ—Ä–Ω–∏–∫', color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button('–°—Ä–µ–¥–∞', color=VkKeyboardColor.SECONDARY)
    keyboard.add_button('–ß–µ—Ç–≤–µ—Ä–≥', color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button('–ü—è—Ç–Ω–∏—Ü–∞', color=VkKeyboardColor.SECONDARY)
    keyboard.add_button('–°—É–±–±–æ—Ç–∞', color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', color=VkKeyboardColor.POSITIVE)
    write_msg_withKeyboard(event.user_id, msg, keyboard)


def operWithWeekdays(event, msg):
    db = requestDB('Data Base/db.db')
    addHomework_flag = db.getUserAddHomewFlag(event.user_id)
    Homework_flag = db.getUserHomewFlag(event.user_id)
    Schedule_flag = db.getUserSchedFlag(event.user_id)
    delHomework_flag = db.getUserDelHomewFlag(event.user_id)
    step_code = db.getUserStepCode(event.user_id)
    #
    if Homework_flag == True:
        sendHomework(event, msg)
        db.changeUserHomewFlag(event.user_id, False)
    elif Schedule_flag == True:
        sendSchedule(msg)
        db.changeUserSchedFlag(event.user_id, False)
    elif addHomework_flag == True or delHomework_flag == True:
        Homework.set_Weekday(msg)
        db.changeUserStepCode(event.user_id, (step_code + 1))
        set_Lesson()
    db.close()


def operTodayOrTomorrow(event):
    db = requestDB('Data Base/db.db')
    Schedule_flag = db.getUserSchedFlag(event.user_id)
    Homework_flag = db.getUserHomewFlag(event.user_id)
    addHomework_flag = db.getUserAddHomewFlag(event.user_id)
    #
    if Schedule_flag == True or Homework_flag == True or addHomework_flag == True:
        idWeekday = datetime.datetime.now().weekday()
        weekdays = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞',
                    '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']
        if Homework_flag == True:
            db.changeUserHomewFlag(event.user_id, False)
            if msg == '–ù–∞ —Å–µ–≥–æ–¥–Ω—è':
                sendHomework(event, weekdays[idWeekday], 1, True)
            elif msg == '–ù–∞ –∑–∞–≤—Ç—Ä–∞':
                if idWeekday == 6:
                    sendHomework(event, weekdays[0], 2)
                else:
                    sendHomework(event, weekdays[idWeekday + 1], 2)
        elif Schedule_flag == True:
            db.changeUserSchedFlag(event.user_id, False)
            if msg == '–ù–∞ —Å–µ–≥–æ–¥–Ω—è':
                sendSchedule(weekdays[idWeekday])
            elif msg == '–ù–∞ –∑–∞–≤—Ç—Ä–∞':
                if idWeekday == 6:
                    sendSchedule(weekdays[0])
                else:
                    sendSchedule(weekdays[idWeekday + 1])
        elif addHomework_flag == True:
            if idWeekday == 6:
                Homework.set_Weekday(weekdays[0])
            else:
                Homework.set_Weekday(weekdays[idWeekday + 1])
            db.changeUserStepCode(event.user_id, 1)
            set_Lesson()
    db.close()


def accusative(weekday):
    if weekday == '–°—Ä–µ–¥–∞':
        return '–°—Ä–µ–¥—É'
    elif weekday == '–ü—è—Ç–Ω–∏—Ü–∞':
        return '–ü—è—Ç–Ω–∏—Ü—É'
    elif weekday == '–°—É–±–±–æ—Ç–∞':
        return '–°—É–±–±–æ—Ç—É'
    else:
        return weekday


def differentOperation(event, msg):
    db = requestDB('Data Base/db.db')
    Homework_flag = db.getUserHomewFlag(event.user_id)
    addHomework_flag = db.getUserAddHomewFlag(event.user_id)
    delHomework_flag = db.getUserDelHomewFlag(event.user_id)
    getLessonDate_flag = db.getUserGetLessDateFlag(event.user_id)
    editHomework_flag = db.getUserEditHomewFlag(event.user_id)
    step_code = db.getUserStepCode(event.user_id)
    #
    if addHomework_flag or delHomework_flag or Homework_flag or getLessonDate_flag or editHomework_flag == True:
        # Date
        if step_code == 0:
            if Check_Date(msg) == True:
                Homework.set_Date(msg)
                if Homework_flag == True:
                    sendHomework(event, None, 3)
                elif addHomework_flag or delHomework_flag == True:
                    db.changeUserStepCode(event.user_id, 1)
                    set_Lesson()
                else:
                    db.changeUserStepCode(event.user_id, 1)
                    getEditCommand(event)
            else:
                msg = '–û—à–∏–±–∫–∞ –¥–∞—Ç—ã: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.'
                write_msg(event.user_id, msg)
                set_Date()
        if userIsAdminCheck(event) == True:
            # Lesson
            if step_code == 1:
                if editHomework_flag == True:
                    editHomework(event, msg)
                    Homework.clear_Stack()
                    db.changeUserStepCode(event.user_id, 0)
                    db.changeUserEditHomewFlag(event.user_id, False)
                elif Check_Lesson(msg) == True:
                    if addHomework_flag == True:
                        Homework.set_Lesson(msg)
                        db.changeUserStepCode(event.user_id, 2)
                        set_Task()
                    elif delHomework_flag == True:
                        Homework.set_Lesson(msg)
                        db.changeUserStepCode(event.user_id, 0)
                        db.changeUserDelHomewFlag(event.user_id, False)
                        delete_Homework()
                        Homework.clear_Stack()
                    elif getLessonDate_flag == True:
                        msg = get_DateByLesson(msg)
                        db.changeUserStepCode(event.user_id, 0)
                        db.changeUserGetLessDateFlag(event.user_id, False)
                        write_msg_withKeyboard(
                            event.user_id, msg, get_EditingKeyboard())
                else:
                    msg = '–û—à–∏–±–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —É—Ä–æ–∫–∞: –¥–ª–∏–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 16 —Å–∏–º–≤–æ–ª–æ–≤.'
                    write_msg(event.user_id, msg)
                    set_Lesson()
            # Task
            elif step_code == 2:
                if Check_Tasks(msg) == True:
                    Homework.set_Task(msg)
                    db.changeUserStepCode(event.user_id, 0)
                    db.changeUserAddHomewFlag(event.user_id, False)
                    set_Homework()
                    Homework.clear_Stack()
                else:
                    msg = '–û—à–∏–±–∫–∞ –∑–∞–¥–∞—á: –¥–ª–∏–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 512 —Å–∏–º–≤–æ–ª–æ–≤.'
                    write_msg(event.user_id, msg)
                    set_Task()
    else:
        msg = '–î–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.'
        write_msg(event.user_id, msg)
    db.close()


def sendSchedule(weekday):
    if weekday == '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        msg = '–£—Ä–æ–∫–∏ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ? –í—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ? –õ—É—á—à–µ –ø–æ—Å–ø–∏, –æ—Ç–¥–æ—Ö–Ω–∏, —Ö–æ—Ä–æ—à–æ –ø–æ–∫—É—à–∞–π.'
        write_msg_withKeyboard(event.user_id, msg, get_MainMenuKeyboard(event))
        return
    #
    weekConfig = config_pars.getWeekConfig('Settings.ini')
    db = requestDB('Data Base/db.db')
    lesson = db.get_Lesson(weekday, weekConfig)
    db.close()
    #
    listLessons = []
    rowcount = len(lesson)
    for row in range(rowcount):
        start_time = lesson[row][1]
        end_time = lesson[row][2]
        lesson_name = lesson[row][3]
        cabinet = lesson[row][4]
        msg = str('üîπ ' + lesson_name + ' ' + start_time +
                  '-' + end_time + ' | ' + str(cabinet))
        listLessons.append(msg)
    msg = 'üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ ' + accusative(weekday) + ':'
    for row in listLessons:
        msg = msg + '\n' + row
    write_msg_withKeyboard(event.user_id, msg, get_MainMenuKeyboard(event))


def sendHomework(event, weekday=None, mode=0, today=False):
    db = requestDB('Data Base/db.db')
    if weekday != None:
        if today == True:
            now = datetime.datetime.now().strftime('%d.%m.%Y')
            Homework.set_Date(str(now))
        else:
            Homework.get_DateByWeekday(weekday)
    else:
        Homework.set_Weekday()
        weekday = Homework.get_Weekday()
    #
    date = Homework.get_Date()
    if weekday != '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        homework_tasks = db.get_Homework(date)
        rowcount = len(homework_tasks)
        if rowcount > 0:
            listHomework = []
            for row in range(rowcount):
                lesson_name = homework_tasks[row][0]
                task = homework_tasks[row][1]
                if checkNewLineInTaskText(task) == True:
                    msg = str('‚ô¶ ' + lesson_name + ':\n' + task)
                else:
                    msg = str('‚ô¶ ' + lesson_name + ': ' + task)
                listHomework.append(msg)
            msg = 'üìù –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ ' + \
                accusative(weekday) + ' (' + date + ')' + ':'
            for rows in listHomework:
                msg = msg + '\n' + rows
        else:
            if mode == 0:
                if weekday == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' or weekday == '–í—Ç–æ—Ä–Ω–∏–∫' or weekday == '–ß–µ—Ç–≤–µ—Ä–≥':
                    msg = '–ù–∞ –±–ª–∏–∂–∞–π—à–∏–π ' + weekday.lower() + ' –Ω–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è.'
                else:
                    msg = '–ù–∞ –±–ª–∏–∂–∞–π—à—É—é ' + \
                        accusative(weekday).lower() + ' –Ω–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è.'
            elif mode == 1:
                msg = '–ù–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è.'
            elif mode == 2:
                msg = '–ù–∞ –∑–∞–≤—Ç—Ä–∞ –Ω–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è.'
            elif mode == 3:
                if weekday == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' or weekday == '–í—Ç–æ—Ä–Ω–∏–∫' or weekday == '–ß–µ—Ç–≤–µ—Ä–≥':
                    msg = '–ù–∞ ' + \
                        accusative(weekday).lower() + ' ' + \
                        date + ' –Ω–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è.'
                else:
                    msg = '–ù–∞ ' + \
                        accusative(weekday).lower() + ' ' + \
                        date + ' –Ω–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è.'
    elif weekday == '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        msg = '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ? –°–æ–≤—Å–µ–º –ø–µ—Ä–µ—É—á–∏–ª–∏—Å—å?'
    Homework.clear_Stack()
    db.changeUserHomewFlag(event.user_id, False)
    db.close()
    write_msg_withKeyboard(event.user_id, msg, get_MainMenuKeyboard(event))


def set_Homework():
    date = Homework.get_Date()
    weekDay = Homework.get_Weekday()
    lesson = Homework.get_Lesson()
    task = Homework.get_Task()
    #
    db = requestDB('Data Base/db.db')
    if db.check_Homework(date, lesson) == False:
        db.add_Homework(date, weekDay, lesson, task)
        if db.check_Homework(date, lesson) == True:
            msg = '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!'
            write_msg_withKeyboard(
                event.user_id, msg, get_MainMenuKeyboard(event))
        else:
            msg = '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ.'
            keyboard = VkKeyboard(one_time=False)
            keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ',
                                color=VkKeyboardColor.SECONDARY)
            keyboard.add_line()
            keyboard.add_button(
                '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', color=VkKeyboardColor.POSITIVE)
            write_msg_withKeyboard(event.user_id, msg, keyboard)
    else:
        msg = '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ —ç—Ç–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–æ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–µ–Ω—å.'
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ',
                            color=VkKeyboardColor.SECONDARY)
        keyboard.add_line()
        keyboard.add_button('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', color=VkKeyboardColor.POSITIVE)
        write_msg_withKeyboard(event.user_id, msg, keyboard)
    db.close()


def delete_Homework():
    date = Homework.get_Date()
    lesson = Homework.get_Lesson()
    #
    db = requestDB('Data Base/db.db')
    if db.check_Homework(date, lesson) == True:
        db.del_Homework(date, lesson)
        db.close()
        msg = '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ!'
        write_msg_withKeyboard(event.user_id, msg, get_MainMenuKeyboard(event))
    else:
        msg = '–¢–∞–∫–æ–≥–æ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.'
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button('–£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è',
                            color=VkKeyboardColor.SECONDARY)
        keyboard.add_line()
        keyboard.add_button('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', color=VkKeyboardColor.POSITIVE)
        write_msg_withKeyboard(event.user_id, msg, keyboard)


def editHomework(event, msg):
    pattern = re.compile('::')
    if pattern.findall(msg):
        result = None
        —Åommand_parts = msg.split('::')
        lesson_h = —Åommand_parts[0]
        task_h = —Åommand_parts[1]
        if Check_Lesson(lesson_h) == False:
            result = '–û—à–∏–±–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —É—Ä–æ–∫–∞: –¥–ª–∏–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 32 —Å–∏–º–≤–æ–ª–∞.\n'
        if Check_Tasks(task_h) == False:
            result += '–û—à–∏–±–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∑–∞–¥–∞–Ω–∏—è: –¥–ª–∏–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 512 —Å–∏–º–≤–æ–ª–æ–≤.\n'
        if result == None:
            date_h = Homework.get_Date()
            db = requestDB('Data Base/db.db')
            if db.check_Homework(date_h, lesson_h) == True:
                db.editHomework(date_h, lesson_h, task_h)
                db.close()
                msg = '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –±—ã–ª–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ.'
            else:
                msg = '–£–∫–∞–∑–∞–Ω–Ω–æ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.'
        else:
            msg = result
    else:
        msg = '–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–º–∞–Ω–¥—ã.'
    write_msg_withKeyboard(event.user_id, msg, get_MainMenuKeyboard(event))


def checkNewLineInTaskText(task):
    pattern = re.compile(r'\n')
    if pattern.findall(task):
        return True
    return False


def get_DateByLesson(lesson):
    weekConfig = config_pars.getWeekConfig('Settings.ini')
    db = requestDB('Data Base/db.db')
    lessons = db.get_allLesson(weekConfig)
    db.close()
    #
    lesson = msg
    main_list = []
    for step in range(len(lessons)):
        if lesson == lessons[step][1]:  # 0 - weekday 1 - lesson
            weekday = lessons[step][0]
            date = datetime.datetime.strptime(
                Homework.get_DateByWeekday(weekday, 1), '%d.%m.%Y')
            main_list.append([date, weekday])
    if len(main_list) > 0:
        now = datetime.datetime.now().replace(
            hour=0, second=0, microsecond=0, minute=0)
        idThisWeekday = now.weekday()
        #
        for step in main_list:
            idStepLesson = step[0].weekday()
            if idStepLesson > idThisWeekday:
                if step[1] == '–í—Ç–æ—Ä–Ω–∏–∫':
                    return lesson + ' –±—É–¥–µ—Ç –≤–æ ' + accusative(step[1]) + ' (' + str(step[0].strftime('%d.%m.%Y')) + ')'
                else:
                    return lesson + ' –±—É–¥–µ—Ç –≤ ' + accusative(step[1]) + ' (' + str(step[0].strftime('%d.%m.%Y')) + ')'
        if main_list[0][1] == '–í—Ç–æ—Ä–Ω–∏–∫':
            return lesson + ' –±—É–¥–µ—Ç –≤–æ ' + accusative(main_list[0][1]) + ' (' + str(main_list[0][0].strftime('%d.%m.%Y')) + ')'
        else:
            return lesson + ' –±—É–¥–µ—Ç –≤ ' + accusative(main_list[0][1]) + ' (' + str(main_list[0][0].strftime('%d.%m.%Y')) + ')'
    else:
        return '–¢–∞–∫–æ–π —É—Ä–æ–∫ –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω.'


def write_msg(user_id, message):
    vk_session.method('messages.send', {
                      'user_id': user_id, 'message': str(message), 'random_id': 0})


def write_msg_withKeyboard(user_id, message, keyboard):
    vk_session.method('messages.send', {'user_id': user_id, 'message': str(message),
                                        'random_id': 0, 'keyboard': keyboard.get_keyboard()})


def get_MainMenuKeyboard(event):
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button('–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ', color=VkKeyboardColor.POSITIVE)
    if userIsAdminCheck(event) == True:
        keyboard.add_line()
        keyboard.add_button(
            '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', color=VkKeyboardColor.SECONDARY)
    return keyboard


def get_EditingKeyboard():
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ',
                        color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ',
                        color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button('–£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è',
                        color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button('–ö–æ–≥–¥–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫?',
                        color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', color=VkKeyboardColor.POSITIVE)
    return keyboard


def getUsers():
    global users
    db = requestDB('Data Base/db.db')
    users = db.get_users()
    db.close()


def checkUser(event):
    if len(users) != 0:
        newUser = True
        user_id = event.user_id
        for user in range(len(users)):
            if user_id == users[user][0]:
                newUser = False
                break
        if newUser == True:
            db = requestDB('Data Base/db.db')
            db.add_user(event.user_id)
            db.close()
            getUsers()
    else:
        db = requestDB('Data Base/db.db')
        db.add_user(event.user_id)
        db.close()
        getUsers()


def userIsAdminCheck(event):
    user_id = event.user_id
    for user in range(len(users)):
        if user_id == users[user][0]:
            return users[user][1]  # True or False


def getEditCommand(event):
    msg = '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ (–ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞)::(–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ). –ù–∞–ø—Ä–∏–º–µ—Ä –ê–ª–≥–µ–±—Ä–∞::–†–µ—à–∏—Ç—å –Ω–æ–º–µ—Ä–∞ 150-155'
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button('–û—Ç–º–µ–Ω–∞', color=VkKeyboardColor.NEGATIVE)
    write_msg_withKeyboard(event.user_id, msg, keyboard)


def editing():
    msg = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ...'
    write_msg_withKeyboard(event.user_id, msg, get_EditingKeyboard())


def set_Date():
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button('–û—Ç–º–µ–Ω–∞', color=VkKeyboardColor.NEGATIVE)
    msg = '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ (–î–µ–Ω—å).(–ú–µ—Å—è—Ü).(–ì–æ–¥). –ù–∞–ø—Ä–∏–º–µ—Ä 03.11.2018'
    write_msg_withKeyboard(event.user_id, msg, keyboard)


def set_Lesson():
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button('–û—Ç–º–µ–Ω–∞', color=VkKeyboardColor.NEGATIVE)
    msg = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞...'
    write_msg_withKeyboard(event.user_id, msg, keyboard)


def set_Task():
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button('–û—Ç–º–µ–Ω–∞', color=VkKeyboardColor.NEGATIVE)
    msg = '–í–≤–µ–¥–∏—Ç–µ –≤—Å–µ –∑–∞–¥–∞—á–∏...'
    write_msg_withKeyboard(event.user_id, msg, keyboard)


def checkCommand(event, msg):
    db = requestDB('Data Base/db.db')
    Homework_flag = db.getUserHomewFlag(event.user_id)
    Schedule_flag = db.getUserSchedFlag(event.user_id)
    addHomework_flag = db.getUserAddHomewFlag(event.user_id)
    delHomework_flag = db.getUserDelHomewFlag(event.user_id)
    getLessDate_flag = db.getUserGetLessDateFlag(event.user_id)
    editHomework_flag = db.getUserEditHomewFlag(event.user_id)
    #
    if msg == '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ':
        db.changeUserHomewFlag(event.user_id, True)
        showWeekdays(event)
    elif msg == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        db.changeUserSchedFlag(event.user_id, True)
        showWeekdays(event)
    elif msg == '–ù–∞ —Å–µ–≥–æ–¥–Ω—è' or msg == '–ù–∞ –∑–∞–≤—Ç—Ä–∞':
        operTodayOrTomorrow(event)
    elif (msg == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' or msg == '–í—Ç–æ—Ä–Ω–∏–∫' or msg == '–°—Ä–µ–¥–∞'
          or msg == '–ß–µ—Ç–≤–µ—Ä–≥' or msg == '–ü—è—Ç–Ω–∏—Ü–∞' or msg == '–°—É–±–±–æ—Ç–∞'):
        operWithWeekdays(event, msg)
    elif msg == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        if Schedule_flag == True:
            db.changeUserSchedFlag(event.user_id, False)
        elif Homework_flag == True:
            db.changeUserHomewFlag(event.user_id, False)
        elif addHomework_flag == True:
            Homework.clear_Stack()
            db.changeUserAddHomewFlag(event.user_id, False)
        elif delHomework_flag == True:
            Homework.clear_Stack()
            db.changeUserDelHomewFlag(event.user_id, False)
        write_msg_withKeyboard(
            event.user_id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', get_MainMenuKeyboard(event))
    elif msg == '–£–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ':
        if Homework_flag or addHomework_flag == True:
            set_Date()
    elif msg == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ':
        if userIsAdminCheck(event) == True:
            editing()
    elif msg == '–î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ':
        if userIsAdminCheck(event) == True:
            db.changeUserAddHomewFlag(event.user_id, True)
            showWeekdays(event)
    elif msg == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ':
        if userIsAdminCheck(event) == True:
            db.changeUserEditHomewFlag(event.user_id, True)
            set_Date()
    elif msg == '–£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è':
        if userIsAdminCheck(event) == True:
            db.changeUserDelHomewFlag(event.user_id, True)
            set_Date()
    elif msg == '–ö–æ–≥–¥–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫?':
        if userIsAdminCheck(event) == True:
            db.changeUserGetLessDateFlag(event.user_id, True)
            db.changeUserStepCode(event.user_id, 1)
            set_Lesson()
    elif msg == '–û—Ç–º–µ–Ω–∞':
        if addHomework_flag == True:
            Homework.clear_Stack()
            db.changeUserAddHomewFlag(event.user_id, False)
            db.changeUserStepCode(event.user_id, 0)
        elif delHomework_flag == True:
            Homework.clear_Stack()
            db.changeUserDelHomewFlag(event.user_id, False)
            db.changeUserStepCode(event.user_id, 0)
        elif Homework_flag == True:
            Homework.clear_Stack()
            db.changeUserHomewFlag(event.user_id, False)
            db.changeUserStepCode(event.user_id, 0)
        elif editHomework_flag == True:
            Homework.clear_Stack()
            db.changeUserStepCode(event.user_id, 0)
            db.changeUserEditHomewFlag(event.user_id, False)
        elif getLessDate_flag == True:
            db.changeUserGetLessDateFlag(event.user_id, False)
            db.changeUserStepCode(event.user_id, 0)
        write_msg_withKeyboard(
            event.user_id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', get_MainMenuKeyboard(event))
    elif msg == '–ù–∞—á–∞—Ç—å':
        write_msg_withKeyboard(
            event.user_id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', get_MainMenuKeyboard(event))
    else:
        differentOperation(event, msg)
    db.close()


if __name__ == '__main__':
    getUsers()
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW:
            if event.to_me:
                checkUser(event)
                msg = event.text
                checkCommand(event, msg)
